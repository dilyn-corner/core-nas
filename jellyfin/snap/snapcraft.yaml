name: dilyn-jellyfin
adopt-info: jellyfin
base: core22
icon: snap/gui/icon.png
license: "CC-BY-NC-SA-4.0 AND GPL-2.0"
website: https://jellyfin.org
contact: dilyn.corner@tutanota.com
issues: https://github.com/dilyn-corner/core-nas/issues
source-code: https://github.com/dilyn-corner/core-nas/tree/22/jellyfin
summary:  "Jellyfin: The Free Software Media System"
description: |
  Jellyfin is the volunteer-built media solution that puts you in control of
  your media. Stream to any device from your own server, with no strings
  attached. Your media, your server, your way.

  This is an unofficial snap.

  This snap is intended to be used in conjunction with dilyn-jellyfin-ffmpeg.

grade: stable
confinement: strict

package-repositories:
  - type: apt
    url: https://repo.jellyfin.org/ubuntu
    suites: [jammy]
    components: [main]
    architectures: [$CRAFT_ARCH_BUILD_FOR]
    key-id: 4918AABC486CA052358D778D49023CD01DE21A7B
  - type: apt
    url: https://repo.radeon.com/rocm/apt/debian
    suites: [jammy]
    components: [main]
    architectures: [$CRAFT_ARCH_BUILD_FOR]
    key-id: CA8BB4727A47B4D09B4EE8969386B48A1A693C5C

plugs:
  # TBD. Requires permission from Store admins
  # home:
  #   read: all
  graphics-core22:
    interface: content
    target: graphics
    content: bins
    default-provider: dilyn-jellyfin-ffmpeg

layout:
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pulseaudio:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pulseaudio
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /etc/igfx_user_feature_next.txt:
    bind-file: $SNAP_DATA/igfx_user_feature_next.txt
  /usr/lib/jellyfin-ffmpeg/share/libdrm/amdgpu.ids:
    bind-file: $SNAP/graphics/usr/lib/jellyfin-ffmpeg/share/libdrm/amdgpu.ids
  /usr/lib/jellyfin-ffmpeg/lib/dri:
    bind: $SNAP/graphics/usr/lib/jellyfin-ffmpeg/lib/dri

apps:
  server:
    command: usr/lib/jellyfin/bin/jellyfin --service --ffmpeg $SNAP/graphics/usr/bin/ffmpeg
    command-chain: [bin/graphics-core22-wrapper]
    daemon: simple
    install-mode: disable
    plugs: [firewall-control, graphics-core22, home, mount-observe, network, network-bind, opengl, removable-media]
    environment:
      PATH:                ${SNAP}/graphics/usr/bin:${PATH}
      JELLYFIN_LOG_DIR:    ${SNAP_DATA}/logs
      JELLYFIN_DATA_DIR:   ${SNAP_COMMON}/data
      JELLYFIN_CACHE_DIR:  ${SNAP_COMMON}/cache
      JELLYFIN_CONFIG_DIR: ${SNAP_COMMON}/config
      JELLYFIN_WEB_DIR:    ${SNAP}/usr/share/jellyfin/web
      LD_LIBRARY_PATH:     ${SNAP}/graphics/usr/lib/jellyfin-ffmpeg/lib:${SNAP}/graphics/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}:${SNAP}/graphics/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/vdpau:${LD_LIBRARY_PATH}
      LIBGL_DRIVERS_PATH:  ${SNAP}/graphics/usr/lib/jellyfin-ffmpeg/lib:${SNAP}/graphics/usr/lib/jellyfin-ffmpeg/lib/dri:${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri:${LIBGL_DRIVERS_PATH}
      LIBVA_DRIVERS_PATH:  ${SNAP}/graphics/usr/lib/jellyfin-ffmpeg/lib:${SNAP}/graphics/usr/lib/jellyfin-ffmpeg/lib/dri:${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri:${LIBVA_DRIVERS_PATH}
      # Enable OpenCL on older AMD cards
      ROC_ENABLE_PRE_VEGA: "1"

parts:
  jellyfin:
    plugin: nil
    stage-packages: [jellyfin-server, jellyfin-web]
    override-build: |
      craftctl default

      craftctl set version="$(dpkg-deb -f "${CRAFT_PART_BUILD}/../stage_packages/jellyfin-server"_*.deb Version)"

  # Remove any overlapping binaries provided by our graphics snap
  # Not currently perfectly one-to-one, but it may just be "good enough"
  graphics-core22:
    after: [jellyfin]
    plugin: dump
    source: https://github.com/canonical/gpu-snap
    source-depth: 1
    source-type: git
    source-branch: main
    stage:
      - bin/graphics-core22-wrapper
    override-prime: |
      craftctl default
      "${CRAFT_PART_SRC}/bin/graphics-core22-cleanup" mesa-core22 nvidia-core22
